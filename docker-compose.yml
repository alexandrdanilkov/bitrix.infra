version: '2'
networks:
  default:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450

services:
    certbot:
        image: certbot/certbot
        hostname: certbot
        container_name: certbot
        env_file: private/environment/certbot.env
        entrypoint: "/bin/sh -c 'apk add --no-cache curl; trap exit TERM; while :; do certbot renew --manual --manual-auth-hook /scripts/authenticator.sh --manual-cleanup-hook /scripts/cleanup.sh --preferred-challenges dns-01 --server https://acme-v02.api.letsencrypt.org/directory; sleep 10d & wait $${!}; done;'"
        volumes:
            - ./private/letsencrypt:/etc/letsencrypt
            - ./config/certbot-dns-pddyandex/authenticator.sh:/scripts/authenticator.sh
            - ./config/certbot-dns-pddyandex/cleanup.sh:/scripts/cleanup.sh

        logging:
            driver: json-file
            options:
                max-size: "10m"
                max-file: "5"

        restart: unless-stopped

    nginx:
        build: ./config/nginx
        hostname: nginx
        container_name: nginx
        image: paskal/nginx:latest
        depends_on:
            - adminer
            - php
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./web/prod:/web/prod
            - ./web/dev:/web/dev
            - ./web/next.favor-group.ru:/web/next
            - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - ./config/nginx/bitrix.conf:/etc/nginx/bitrix.conf:ro
            - ./config/nginx/fastcgi.conf:/etc/nginx/fastcgi.conf:ro
            - ./config/nginx/server_name.conf:/etc/nginx/server_name.conf:ro
            - ./config/nginx/conf.d:/etc/nginx/conf.d:ro
            - ./private/letsencrypt:/etc/nginx/letsencrypt:ro
            # Logs
            - ./logs/nginx:/var/log/nginx
        environment:
            - TZ=Europe/Moscow

        logging:
            driver: json-file
            options:
                max-size: "10m"
                max-file: "5"

        restart: unless-stopped

    php:
        build: ./config/php
        image: paskal/bitrix-php:latest
        hostname: php
        container_name: php
        depends_on:
            - mysql
            - memcached
            - memcached-sessions
        expose:
            - "9000"
        volumes:
            - ./web/prod:/web/prod
            - ./web/dev:/web/dev
            - ./web/next.favor-group.ru:/web/next
            - ./private/msmtprc:/etc/msmtprc
            - ./config/php/90-php.ini:/etc/php/7.4/fpm/conf.d/90-php.ini
            - ./config/php/90-php.ini:/etc/php/7.4/cli/conf.d/90-php.ini
            # MySQL socket to prevent transferring data trough TCP
            - ./private/mysqld:/var/run/mysqld
            # Logs
            - ./logs/php:/var/log/php

        logging:
            driver: json-file
            options:
                max-size: "10m"
                max-file: "5"

        restart: unless-stopped

    php-cron:
        command: cron -f
        image: paskal/bitrix-php:latest
        hostname: php-cron
        container_name: php-cron
        depends_on:
            - mysql
            - memcached
            - memcached-sessions
        volumes:
            - ./web/prod:/web/prod
            - ./web/dev:/web/dev
            - ./private/msmtprc:/etc/msmtprc
            - ./config/php/90-php.ini:/etc/php/7.4/fpm/conf.d/90-php.ini
            - ./config/php/90-php.ini:/etc/php/7.4/cli/conf.d/90-php.ini
            # MySQL socket to prevent transferring data trough TCP
            - ./private/mysqld:/var/run/mysqld
            # Cronjobs
            - ./config/cron/php-cron.cron:/etc/cron.d/tasks:ro
            # Logs
            - ./logs/php:/var/log/php

        logging:
            driver: json-file
            options:
                max-size: "10m"
                max-file: "5"

        restart: unless-stopped

    mysql:
        image: percona/percona-server:8.0
        hostname: mysql
        container_name: mysql
        # MYSQL_ROOT_PASSWORD, MYSQL_USER, MYSQL_PASSWORD
        env_file: private/environment/mysql.env
        expose:
            - "3306"
        ports:
            - "127.0.0.1:3306:3306"
        volumes:
            # Configuration
            - ./config/mysql/my.cnf:/etc/my.cnf.d/my.cnf
            # Data persistence
            - ./private/mysql-data:/var/lib/mysql
            # MySQL socket to prevent transferring data trough TCP
            # do chmod user:1001 ./private/mysqld
            - ./private/mysqld:/var/mysql-socket
            # Logs
            - ./logs/mysql:/var/log/mysql
        environment:
            MYSQL_DATABASE: admin_favorgroup
            TZ: Europe/Moscow
        cap_add:
            - SYS_NICE  # CAP_SYS_NICE

        logging:
            driver: json-file
            options:
                max-size: "10m"
                max-file: "5"

        restart: unless-stopped

    memcached:
        image: memcached:1-alpine
        hostname: memcached
        container_name: memcached
        restart: unless-stopped
        expose:
            - "11211"

    memcached-sessions:
        image: memcached:1-alpine
        hostname: memcached-sessions
        container_name: memcached-sessions
        restart: unless-stopped
        expose:
            - "11211"

    adminer:
        image: adminer
        hostname: adminer
        container_name: adminer
        depends_on:
            - mysql
        expose:
            - "8080"
        environment:
            ADMINER_DEFAULT_SERVER: mysql

        logging:
            driver: json-file
            options:
                max-size: "10m"
                max-file: "5"

        restart: unless-stopped

    ftp:
        image: stilliard/pure-ftpd
        container_name: ftp
        # FTP_USER_NAME, FTP_USER_PASS
        env_file: private/environment/ftp.env
        ports:
            - "21:21"
            - "30000-30009:30000-30009"
        volumes:
            - ./web:/home/web
        environment:
            PUBLICHOST: favor-group.ru
            FTP_USER_HOME: /home/web

        logging:
            driver: json-file
            options:
                max-size: "10m"
                max-file: "5"

        restart: unless-stopped

    # Monitoring

    ## Zabbix Agent 2
    zabbix-agent:
        build: ./config/zabbix
        image: paskal/zabbix-agent2:latest
        container_name: zabbix-agent
        privileged: true
        # MYSQL_USER, MYSQL_PASSWORD
        env_file: private/environment/mysql.env
        depends_on:
            - mysql
            - nginx
            - memcached
        volumes:
            # for monitoring purposes
            - ./logs/nginx:/var/log/nginx
            # for monitoring purposes
            - ./web/prod/upload:/web/prod/upload
            # this is needed in order to monitor docker
            # to make it work you need to create user "zabbix" with id 1997 on the host system,
            # and make sure it has enough permissions to read /var/run/docker.sock
            - /var/run/docker.sock:/var/run/docker.sock
            # MySQL socket to prevent transferring data trough TCP
            - ./private/mysqld:/var/run/mysqld
        environment:
            - TZ=Europe/Moscow
            - ZBX_HOSTNAME=favor-group.ru.docker
            - ZBX_SERVER_HOST=46.101.10.22
            - ZBX_DENYKEY=
            - ZBX_ALLOWKEY=system.run[*]

        logging:
            driver: json-file
            options:
                max-size: "10m"
                max-file: "5"
        restart: unless-stopped
